generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id                  Int       @id @default(autoincrement())
  email               String    @unique
  username            String    @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @default(now()) @updatedAt
  servers             Member[]
  messages            Message[]
}

model Server {
  id        Int       @id @default(autoincrement())
  name      String    @db.MediumText
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  members   Member[]
  channels  Channel[]
}

model Member {
  id        Int      @id @default(autoincrement())
  server    Server   @relation(fields: [serverId], references: [id])
  serverId  Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([serverId, userId])
}

enum ChannelEnum {
  CHAT
  VOICE
}

model Channel {
  id           Int         @id @default(autoincrement())
  name         String
  channel_type ChannelEnum @default(CHAT)
  server       Server      @relation(fields: [serverId], references: [id])
  serverId     Int
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now()) @updatedAt
  messages     Message[]
}

model Message {
  id        Int      @id @default(autoincrement())
  text      String
  channel   Channel  @relation(fields: [channelId], references: [id])
  channelId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
